vendor_name = ModelSim
source_file = 1, C:/Users/mallman/Desktop/Stuff/Research Related/Sae Woo Group/VHDL/PCIe-FPGA/src/fpga/testing/Flancter.vhd
source_file = 1, C:/Users/mallman/Desktop/Stuff/Research Related/Sae Woo Group/VHDL/PCIe-FPGA/src/fpga/testing/Flancter.vwf
source_file = 1, C:/Users/mallman/Desktop/Stuff/Research Related/Sae Woo Group/VHDL/PCIe-FPGA/src/fpga/testing/testing_top.vhd
source_file = 1, C:/Users/mallman/Desktop/Stuff/Research Related/Sae Woo Group/VHDL/PCIe-FPGA/src/fpga/testing/testing.vwf
source_file = 1, C:/Users/mallman/Desktop/Stuff/Research Related/Sae Woo Group/VHDL/PCIe-FPGA/src/fpga/testing/db/testing.cbx.xml
source_file = 1, c:/altera/14.0/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, c:/altera/14.0/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, c:/altera/14.0/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, c:/altera/14.0/quartus/libraries/vhdl/ieee/timing_p.vhd
design_name = testing_top
instance = comp, \cnt[0]~output , cnt[0]~output, testing_top, 1
instance = comp, \cnt[1]~output , cnt[1]~output, testing_top, 1
instance = comp, \cnt[2]~output , cnt[2]~output, testing_top, 1
instance = comp, \cnt[3]~output , cnt[3]~output, testing_top, 1
instance = comp, \pulseFOut~output , pulseFOut~output, testing_top, 1
instance = comp, \clearOut~output , clearOut~output, testing_top, 1
instance = comp, \idleCnt[0]~output , idleCnt[0]~output, testing_top, 1
instance = comp, \idleCnt[1]~output , idleCnt[1]~output, testing_top, 1
instance = comp, \idleCnt[2]~output , idleCnt[2]~output, testing_top, 1
instance = comp, \idleCnt[3]~output , idleCnt[3]~output, testing_top, 1
instance = comp, \captureCnt[0]~output , captureCnt[0]~output, testing_top, 1
instance = comp, \captureCnt[1]~output , captureCnt[1]~output, testing_top, 1
instance = comp, \captureCnt[2]~output , captureCnt[2]~output, testing_top, 1
instance = comp, \captureCnt[3]~output , captureCnt[3]~output, testing_top, 1
instance = comp, \latchCnt[0]~output , latchCnt[0]~output, testing_top, 1
instance = comp, \latchCnt[1]~output , latchCnt[1]~output, testing_top, 1
instance = comp, \latchCnt[2]~output , latchCnt[2]~output, testing_top, 1
instance = comp, \latchCnt[3]~output , latchCnt[3]~output, testing_top, 1
instance = comp, \clrCnt[0]~output , clrCnt[0]~output, testing_top, 1
instance = comp, \clrCnt[1]~output , clrCnt[1]~output, testing_top, 1
instance = comp, \clrCnt[2]~output , clrCnt[2]~output, testing_top, 1
instance = comp, \clrCnt[3]~output , clrCnt[3]~output, testing_top, 1
instance = comp, \clk~input , clk~input, testing_top, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, testing_top, 1
instance = comp, \control~input , control~input, testing_top, 1
instance = comp, \PulseCatcher:state.CLR , \PulseCatcher:state.CLR, testing_top, 1
instance = comp, \pulse~input , pulse~input, testing_top, 1
instance = comp, \Selector0~0 , Selector0~0, testing_top, 1
instance = comp, \flancterGen|clrFlop~0 , flancterGen|clrFlop~0, testing_top, 1
instance = comp, \flancterGen|clrFlop , flancterGen|clrFlop, testing_top, 1
instance = comp, \flancterGen|setFlop~0 , flancterGen|setFlop~0, testing_top, 1
instance = comp, \flancterGen|setFlop , flancterGen|setFlop, testing_top, 1
instance = comp, \flancterGen|flagSync~0 , flancterGen|flagSync~0, testing_top, 1
instance = comp, \flancterGen|flagSync , flancterGen|flagSync, testing_top, 1
instance = comp, \PulseCatcher:state.IDLE~0 , \PulseCatcher:state.IDLE~0, testing_top, 1
instance = comp, \PulseCatcher:state.IDLE~1 , \PulseCatcher:state.IDLE~1, testing_top, 1
instance = comp, \PulseCatcher:state.IDLE , \PulseCatcher:state.IDLE, testing_top, 1
instance = comp, \Selector2~0 , Selector2~0, testing_top, 1
instance = comp, \PulseCatcher:state.CAPTURE , \PulseCatcher:state.CAPTURE, testing_top, 1
instance = comp, \Selector3~0 , Selector3~0, testing_top, 1
instance = comp, \PulseCatcher:state.LATCH , \PulseCatcher:state.LATCH, testing_top, 1
instance = comp, \PulseCatcher:count[0]~0 , \PulseCatcher:count[0]~0, testing_top, 1
instance = comp, \PulseCatcher:count[0] , \PulseCatcher:count[0], testing_top, 1
instance = comp, \PulseCatcher:count[1]~0 , \PulseCatcher:count[1]~0, testing_top, 1
instance = comp, \PulseCatcher:count[1] , \PulseCatcher:count[1], testing_top, 1
instance = comp, \PulseCatcher:count[2]~0 , \PulseCatcher:count[2]~0, testing_top, 1
instance = comp, \PulseCatcher:count[2] , \PulseCatcher:count[2], testing_top, 1
instance = comp, \PulseCatcher:count[3]~0 , \PulseCatcher:count[3]~0, testing_top, 1
instance = comp, \PulseCatcher:count[3]~1 , \PulseCatcher:count[3]~1, testing_top, 1
instance = comp, \PulseCatcher:count[3] , \PulseCatcher:count[3], testing_top, 1
instance = comp, \PulseCatcher:idlecount[0]~0 , \PulseCatcher:idlecount[0]~0, testing_top, 1
instance = comp, \PulseCatcher:idlecount[0] , \PulseCatcher:idlecount[0], testing_top, 1
instance = comp, \PulseCatcher:idlecount[1]~0 , \PulseCatcher:idlecount[1]~0, testing_top, 1
instance = comp, \PulseCatcher:idlecount[1] , \PulseCatcher:idlecount[1], testing_top, 1
instance = comp, \PulseCatcher:idlecount[2]~0 , \PulseCatcher:idlecount[2]~0, testing_top, 1
instance = comp, \PulseCatcher:idlecount[2] , \PulseCatcher:idlecount[2], testing_top, 1
instance = comp, \PulseCatcher:idlecount[3]~0 , \PulseCatcher:idlecount[3]~0, testing_top, 1
instance = comp, \PulseCatcher:idlecount[3]~1 , \PulseCatcher:idlecount[3]~1, testing_top, 1
instance = comp, \PulseCatcher:idlecount[3] , \PulseCatcher:idlecount[3], testing_top, 1
instance = comp, \PulseCatcher:capturecount[0]~0 , \PulseCatcher:capturecount[0]~0, testing_top, 1
instance = comp, \PulseCatcher:capturecount[0] , \PulseCatcher:capturecount[0], testing_top, 1
instance = comp, \PulseCatcher:capturecount[1]~0 , \PulseCatcher:capturecount[1]~0, testing_top, 1
instance = comp, \PulseCatcher:capturecount[1] , \PulseCatcher:capturecount[1], testing_top, 1
instance = comp, \PulseCatcher:capturecount[2]~0 , \PulseCatcher:capturecount[2]~0, testing_top, 1
instance = comp, \PulseCatcher:capturecount[2] , \PulseCatcher:capturecount[2], testing_top, 1
instance = comp, \PulseCatcher:capturecount[3]~0 , \PulseCatcher:capturecount[3]~0, testing_top, 1
instance = comp, \PulseCatcher:capturecount[3]~1 , \PulseCatcher:capturecount[3]~1, testing_top, 1
instance = comp, \PulseCatcher:capturecount[3] , \PulseCatcher:capturecount[3], testing_top, 1
instance = comp, \PulseCatcher:clrcount[0]~0 , \PulseCatcher:clrcount[0]~0, testing_top, 1
instance = comp, \PulseCatcher:clrcount[0] , \PulseCatcher:clrcount[0], testing_top, 1
instance = comp, \PulseCatcher:clrcount[1]~0 , \PulseCatcher:clrcount[1]~0, testing_top, 1
instance = comp, \PulseCatcher:clrcount[1] , \PulseCatcher:clrcount[1], testing_top, 1
instance = comp, \PulseCatcher:clrcount[2]~0 , \PulseCatcher:clrcount[2]~0, testing_top, 1
instance = comp, \PulseCatcher:clrcount[2] , \PulseCatcher:clrcount[2], testing_top, 1
instance = comp, \PulseCatcher:clrcount[3]~0 , \PulseCatcher:clrcount[3]~0, testing_top, 1
instance = comp, \PulseCatcher:clrcount[3]~1 , \PulseCatcher:clrcount[3]~1, testing_top, 1
instance = comp, \PulseCatcher:clrcount[3] , \PulseCatcher:clrcount[3], testing_top, 1
